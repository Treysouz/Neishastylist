name: 🕵️ Testing

on:
  workflow_call:
    inputs:
      branch:
        description: "Branch to test"
        required: false
        default: ""
        type: string
    secrets:
      SUPABASE_URL:
        required: true
      SUPABASE_KEY:
        required: true
    outputs:
      tests-passed:
        description: "Whether all tests passed"
        value: ${{ jobs.test.outputs.success }}

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
    outputs:
      success: ${{ steps.mark-success.outputs.success }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch || github.ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: "npm"

      - name: Cache node_modules
        id: cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Run linting
        run: |
          echo "🔍 Running linting..."
          npm run lint

      - name: Run unit tests with coverage
        run: |
          echo "🧪 Running unit tests with coverage..."
          npm run test:unit-coverage

      - name: Cache Playwright browsers
        id: playwright-cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run e2e tests
        run: |
          echo "🖥️ Running e2e tests..."
          npm run test:e2e

      - name: Mark tests as successful
        id: mark-success
        if: success()
        run: echo "success=true" >> $GITHUB_OUTPUT

      - name: Mark tests as failed
        if: failure()
        run: echo "success=false" >> $GITHUB_OUTPUT
